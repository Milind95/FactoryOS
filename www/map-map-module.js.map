{"version":3,"sources":["webpack:///./src/app/map/map.module.ts","webpack:///./src/app/map/map.page.html","webpack:///./src/app/map/map.page.scss","webpack:///./src/app/map/map.page.ts"],"names":[],"mappings":"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","file":"map-map-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { MapPage } from './map.page';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MapPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [MapPage]\r\n})\r\nexport class MapPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-searchbar\\r\\n    [(ngModel)]=\\\"autocomplete.input\\\"\\r\\n    (ionInput)=\\\"updateSearchResults()\\\"\\r\\n    placeholder=\\\"Search for a place\\\"\\r\\n  ></ion-searchbar>\\r\\n  <ion-list [hidden]=\\\"autocompleteItems.length == 0\\\">\\r\\n    <ion-item\\r\\n      *ngFor=\\\"let item of autocompleteItems\\\"\\r\\n      tappable\\r\\n      (click)=\\\"selectSearchResult(item)\\\"\\r\\n    >\\r\\n      {{ item.description }}\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n  <ion-card style=\\\"height: 88%;\\\"> <div id=\\\"map_canvas\\\"></div> </ion-card>\\r\\n</ion-content>\\r\\n\"","module.exports = \"#map_canvas {\\n  height: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFwL0M6XFxVc2Vyc1xcbWlyb2hva2FcXERlc2t0b3BcXEhhY2thdGhvbiBTb2x1dGlvbiBVSVxcRmFjdG9yeU9TL3NyY1xcYXBwXFxtYXBcXG1hcC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxhQUFZLEVBQ2YiLCJmaWxlIjoic3JjL2FwcC9tYXAvbWFwLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIiNtYXBfY2FudmFze1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG59Il19 */\"","import { Component, OnInit } from \"@angular/core\";\r\n// import {\r\n//   GoogleMaps,\r\n//   GoogleMap,\r\n//   GoogleMapsEvent,\r\n//   GoogleMapOptions,\r\n//   CameraPosition,\r\n//   MarkerOptions,\r\n//   Marker,\r\n//   Environment\r\n// } from '@ionic-native/google-maps/ngx';\r\nimport { Router } from \"@angular/router\";\r\ndeclare var google;\r\n@Component({\r\n  selector: \"app-map\",\r\n  templateUrl: \"./map.page.html\",\r\n  styleUrls: [\"./map.page.scss\"]\r\n})\r\nexport class MapPage implements OnInit {\r\n  // map: GoogleMap;\r\n  map;\r\n  markers = [];\r\n  GoogleAutocomplete = new google.maps.places.AutocompleteService();\r\n  autocomplete = { input: \"\" };\r\n  autocompleteItems = [];\r\n  geocoder = new google.maps.Geocoder();\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.loadMap();\r\n  }\r\n\r\n  loadMap() {\r\n    this.map = new google.maps.Map(document.getElementById(\"map_canvas\"), {\r\n      center: { lat: -34.9011, lng: -56.1645 },\r\n      zoom: 15\r\n    });\r\n    let marker = new google.maps.Marker({\r\n      title: \"Ionic\",\r\n      animation: google.maps.Animation.DROP,\r\n      position: { lat: -34.9011, lng: -56.1645 },\r\n      map: this.map\r\n    });\r\n    this.markers.push(marker);\r\n    google.maps.event.addListener(marker, \"click\", () => {\r\n      console.log(\"reached here inside marker\");\r\n      this.router.navigate(['/home'])\r\n    });\r\n    // This code is necessary for browser\r\n    // Environment.setEnv({\r\n    //   'API_KEY_FOR_BROWSER_RELEASE': 'AIzaSyDTnnlhDW71zaEyVichmDouZaH7p0_Of_g',\r\n    //   'API_KEY_FOR_BROWSER_DEBUG': 'AIzaSyDTnnlhDW71zaEyVichmDouZaH7p0_Of_g'\r\n    // });\r\n\r\n    // let mapOptions: GoogleMapOptions = {\r\n    //   camera: {\r\n    //      target: {\r\n    //        lat: 43.0741904,\r\n    //        lng: -89.3809802\r\n    //      },\r\n    //      zoom: 18,\r\n    //      tilt: 30\r\n    //    }\r\n    // };\r\n\r\n    // this.map = GoogleMaps.create('map_canvas', mapOptions);\r\n\r\n    // let marker: Marker = this.map.addMarkerSync({\r\n    //   title: 'Ionic',\r\n    //   icon: 'blue',\r\n    //   animation: 'DROP',\r\n    //   position: {\r\n    //     lat: 43.0741904,\r\n    //     lng: -89.3809802\r\n    //   }\r\n    // });\r\n    // marker.on(GoogleMapsEvent.MARKER_CLICK).subscribe(() => {\r\n    //   this.router.navigate(['/home'])\r\n    // });\r\n  }\r\n\r\n  updateSearchResults() {\r\n    if (this.autocomplete.input == \"\") {\r\n      this.autocompleteItems = [];\r\n      return;\r\n    }\r\n    this.GoogleAutocomplete.getPlacePredictions(\r\n      { input: this.autocomplete.input },\r\n      (predictions, status) => {\r\n        this.autocompleteItems = [];\r\n        // this.zone.run(() => {\r\n        predictions.forEach(prediction => {\r\n          this.autocompleteItems.push(prediction);\r\n        });\r\n        // });\r\n      }\r\n    );\r\n  }\r\n\r\n  selectSearchResult(item) {\r\n    // this.clearMarkers();\r\n    this.autocompleteItems = [];\r\n\r\n    this.geocoder.geocode({ placeId: item.place_id }, (results, status) => {\r\n      if (status === \"OK\" && results[0]) {\r\n        let position = {\r\n          lat: results[0].geometry.location.lat,\r\n          lng: results[0].geometry.location.lng\r\n        };\r\n        // let marker = new google.maps.Marker({\r\n        //   position: results[0].geometry.location,\r\n        //   map: this.map\r\n        // });\r\n        // this.markers.push(marker);\r\n        this.map.setCenter(results[0].geometry.location);\r\n      }\r\n    });\r\n  }\r\n\r\n  // tryGeolocation(){\r\n  //   this.clearMarkers();\r\n  //   this.geolocation.getCurrentPosition().then((resp) => {\r\n  //     let pos = {\r\n  //       lat: resp.coords.latitude,\r\n  //       lng: resp.coords.longitude\r\n  //     };\r\n  //     let marker = new google.maps.Marker({\r\n  //       position: pos,\r\n  //       map: this.map,\r\n  //       title: 'I am here!'\r\n  //     });\r\n  //     this.markers.push(marker);\r\n  //     this.map.setCenter(pos);\r\n  //   }).catch((error) => {\r\n  //     console.log('Error getting location', error);\r\n  //   });\r\n  // }\r\n}\r\n"],"sourceRoot":""}