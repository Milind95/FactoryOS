{"version":3,"sources":["webpack:///./src/app/map/map.module.ts","webpack:///./src/app/map/map.page.html","webpack:///./src/app/map/map.page.scss","webpack:///./src/app/map/map.page.ts"],"names":[],"mappings":"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","file":"map-map-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { MapPage } from './map.page';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MapPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [MapPage]\n})\nexport class MapPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title> Maps </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n      <ion-searchbar\\n        [(ngModel)]=\\\"autocomplete.input\\\"\\n        (ionInput)=\\\"updateSearchResults()\\\"\\n        placeholder=\\\"Search for a place\\\"\\n      ></ion-searchbar>\\n      <ion-list [hidden]=\\\"autocompleteItems.length == 0\\\">\\n        <ion-item\\n          *ngFor=\\\"let item of autocompleteItems\\\"\\n          tappable\\n          (click)=\\\"selectSearchResult(item)\\\"\\n        >\\n          {{ item.description }}\\n        </ion-item>\\n      </ion-list>\\n  <ion-card style=\\\"height: 100%;\\\">\\n  <div id=\\\"map_canvas\\\"></div>\\n  </ion-card>\\n</ion-content>\\n\"","module.exports = \"#map_canvas {\\n  height: 100%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFwL0M6XFxVc2Vyc1xcYWRtaW5cXERlc2t0b3BcXHNhbXBsZUFwcC9zcmNcXGFwcFxcbWFwXFxtYXAucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBWSxFQUNmIiwiZmlsZSI6InNyYy9hcHAvbWFwL21hcC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjbWFwX2NhbnZhc3tcclxuICAgIGhlaWdodDogMTAwJTtcclxufSJdfQ== */\"","import { Component, OnInit } from \"@angular/core\";\n// import {\n//   GoogleMaps,\n//   GoogleMap,\n//   GoogleMapsEvent,\n//   GoogleMapOptions,\n//   CameraPosition,\n//   MarkerOptions,\n//   Marker,\n//   Environment\n// } from '@ionic-native/google-maps/ngx';\nimport { Router } from \"@angular/router\";\ndeclare var google;\n@Component({\n  selector: \"app-map\",\n  templateUrl: \"./map.page.html\",\n  styleUrls: [\"./map.page.scss\"]\n})\nexport class MapPage implements OnInit {\n  // map: GoogleMap;\n  map;\n  markers = [];\n  GoogleAutocomplete = new google.maps.places.AutocompleteService();\n  autocomplete = { input: \"\" };\n  autocompleteItems = [];\n  geocoder = new google.maps.Geocoder();\n\n  constructor(private router: Router) {}\n\n  ngOnInit() {\n    this.loadMap();\n  }\n\n  loadMap() {\n    this.map = new google.maps.Map(document.getElementById(\"map_canvas\"), {\n      center: { lat: -34.9011, lng: -56.1645 },\n      zoom: 15\n    });\n    let marker = new google.maps.Marker({\n      title: \"Ionic\",\n      animation: google.maps.Animation.DROP,\n      position: { lat: -34.9011, lng: -56.1645 },\n      map: this.map\n    });\n    this.markers.push(marker);\n    google.maps.event.addListener(marker, \"click\", () => {\n      console.log(\"reached here inside marker\");\n      this.router.navigate(['/home'])\n    });\n    // This code is necessary for browser\n    // Environment.setEnv({\n    //   'API_KEY_FOR_BROWSER_RELEASE': 'AIzaSyDTnnlhDW71zaEyVichmDouZaH7p0_Of_g',\n    //   'API_KEY_FOR_BROWSER_DEBUG': 'AIzaSyDTnnlhDW71zaEyVichmDouZaH7p0_Of_g'\n    // });\n\n    // let mapOptions: GoogleMapOptions = {\n    //   camera: {\n    //      target: {\n    //        lat: 43.0741904,\n    //        lng: -89.3809802\n    //      },\n    //      zoom: 18,\n    //      tilt: 30\n    //    }\n    // };\n\n    // this.map = GoogleMaps.create('map_canvas', mapOptions);\n\n    // let marker: Marker = this.map.addMarkerSync({\n    //   title: 'Ionic',\n    //   icon: 'blue',\n    //   animation: 'DROP',\n    //   position: {\n    //     lat: 43.0741904,\n    //     lng: -89.3809802\n    //   }\n    // });\n    // marker.on(GoogleMapsEvent.MARKER_CLICK).subscribe(() => {\n    //   this.router.navigate(['/home'])\n    // });\n  }\n\n  updateSearchResults() {\n    if (this.autocomplete.input == \"\") {\n      this.autocompleteItems = [];\n      return;\n    }\n    this.GoogleAutocomplete.getPlacePredictions(\n      { input: this.autocomplete.input },\n      (predictions, status) => {\n        this.autocompleteItems = [];\n        // this.zone.run(() => {\n        predictions.forEach(prediction => {\n          this.autocompleteItems.push(prediction);\n        });\n        // });\n      }\n    );\n  }\n\n  selectSearchResult(item) {\n    // this.clearMarkers();\n    this.autocompleteItems = [];\n\n    this.geocoder.geocode({ placeId: item.place_id }, (results, status) => {\n      if (status === \"OK\" && results[0]) {\n        let position = {\n          lat: results[0].geometry.location.lat,\n          lng: results[0].geometry.location.lng\n        };\n        let marker = new google.maps.Marker({\n          position: results[0].geometry.location,\n          map: this.map\n        });\n        this.markers.push(marker);\n        this.map.setCenter(results[0].geometry.location);\n      }\n    });\n  }\n\n  // tryGeolocation(){\n  //   this.clearMarkers();\n  //   this.geolocation.getCurrentPosition().then((resp) => {\n  //     let pos = {\n  //       lat: resp.coords.latitude,\n  //       lng: resp.coords.longitude\n  //     };\n  //     let marker = new google.maps.Marker({\n  //       position: pos,\n  //       map: this.map,\n  //       title: 'I am here!'\n  //     });\n  //     this.markers.push(marker);\n  //     this.map.setCenter(pos);\n  //   }).catch((error) => {\n  //     console.log('Error getting location', error);\n  //   });\n  // }\n}\n"],"sourceRoot":""}