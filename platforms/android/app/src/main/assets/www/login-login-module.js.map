{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEJ;AAEzC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAWF;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAT3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB5B,kXAAkX,mBAAmB,qBAAqB,oBAAoB,u5BAAu5B,OAAO,wrB;;;;;;;;;;;ACA50C,6BAA6B,mCAAmC,EAAE,+CAA+C,mjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/D;AACT;AACQ;AAOjD;IAGE,mBAAmB,eAAgC,EACzC,MAAc;QADL,oBAAe,GAAf,eAAe,CAAiB;QACzC,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAE7B,4BAAQ,GAAR;IACA,CAAC;IACD,yBAAK,GAAL;QACE,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,EAAE;YAC1D,IAAI,CAAC,uBAAuB,CAAC,wBAAwB,CAAC,CAAC;YACvD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;SAChC;aACI,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;YACjE,IAAI,CAAC,uBAAuB,CAAC,wBAAwB,CAAC,CAAC;YACvD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;SAChC;aACI;YACH,IAAI,CAAC,uBAAuB,CAAC,qBAAqB,CAAC,CAAC;YACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SAClC;IACH,CAAC;IAEK,2CAAuB,GAA7B,UAA8B,IAAI;;;;;4BAClB,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,OAAO,EAAE,IAAI;4BACb,eAAe,EAAE,IAAI;4BACrB,QAAQ,EAAE,QAAQ;4BAClB,eAAe,EAAE,MAAM;4BACvB,QAAQ,EAAE,IAAI;yBACf,CAAC;;wBANI,KAAK,GAAG,SAMZ;wBACF,KAAK,CAAC,OAAO,EAAE,CAAC;;;;;KACjB;IAhCU,SAAS;QALrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAIoC,8DAAe;YACjC,sDAAM;OAJb,SAAS,CAiCrB;IAAD,gBAAC;CAAA;AAjCqB","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>login</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<!--class=\\\"backgroundView\\\"-->\\r\\n<ion-content>\\r\\n <ion-img src=\\\"/assets/finalFactory.jpg\\\"></ion-img>\\r\\n <ion-img src=\\\"/assets/finalFactory.jpg\\\" style=\\\"margin-top: -4px !important\\\"></ion-img>\\r\\n  <ion-card style=\\\"background: #e0f1dd;position: absolute;\\r\\n    bottom: 30px;\\r\\n    right: 21px;\\\">\\r\\n    <ion-card-content>\\r\\n      <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\" autocomplete=\\\"off\\\">\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-list>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"stacked\\\">User Name</ion-label>\\r\\n                <ion-input placeholder=\\\"UserName\\\" name=\\\"username\\\" id=\\\"loginField\\\" type=\\\"text\\\" required [(ngModel)]=\\\"username\\\"></ion-input>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-label position=\\\"stacked\\\">Password</ion-label>\\r\\n                <ion-input placeholder=\\\"Password\\\" name=\\\"password\\\" id=\\\"passwordField\\\" type=\\\"password\\\" required [(ngModel)]=\\\"password\\\"></ion-input>\\r\\n              </ion-item>\\r\\n\\r\\n            </ion-list>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <div *ngIf=\\\"error\\\">{{error}}</div>\\r\\n            <ion-button expand=\\\"full\\\" type=\\\"submit\\\" [disabled]=\\\"!loginForm.form.valid\\\">Login\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </form>\\r\\n\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-button color=\\\"primary\\\" strong=\\\"true\\\" size=\\\"small\\\" fill=\\\"clear\\\" expand=\\\"full\\\" >Forget Password\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n        <ion-col>\\r\\n          <ion-button color=\\\"secondary\\\" strong=\\\"true\\\" size=\\\"small\\\" fill=\\\"clear\\\" expand=\\\"full\\\">Register\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-card-content>\\r\\n  </ion-card>\\r\\n\\r\\n\\r\\n\\r\\n</ion-content>\"","module.exports = \".scroll-y {\\n  background: #e0f1dd !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vQzpcXFVzZXJzXFxtaXJvaG9rYVxcRGVza3RvcFxcSGFja2F0aG9uIFNvbHV0aW9uIFVJXFxGYWN0b3J5T1Mvc3JjXFxhcHBcXGxvZ2luXFxsb2dpbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7RUFDSSwrQkFBOEIsRUFDakMiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvLyAuYmFja2dyb3VuZFZpZXd7XHJcbi8vICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJy4uLy4uL2Fzc2V0cy9mYWN0b3J5QmFja2dyb3VuZC5qcGVnJykgIWltcG9ydGFudDtcclxuLy8gfVxyXG4uc2Nyb2xsLXl7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZTBmMWRkICFpbXBvcnRhbnQ7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n  username: String;\r\n  password: String;\r\n  constructor(public toastController: ToastController,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  login() {\r\n    if (this.username === 'admin' && this.password === 'admin') {\r\n      this.presentToastWithOptions('Successfully logged in');\r\n      this.router.navigate(['/map']);\r\n    } \r\n    else if (this.username === 'worker' && this.password === 'worker') {\r\n      this.presentToastWithOptions('Successfully logged in');\r\n      this.router.navigate(['/map']);\r\n    } \r\n    else {\r\n      this.presentToastWithOptions('Invalid credentials');\r\n      this.router.navigate(['/login']);\r\n    }\r\n  }\r\n\r\n  async presentToastWithOptions(text) {\r\n    const toast = await this.toastController.create({\r\n      message: text,\r\n      showCloseButton: true,\r\n      position: 'bottom',\r\n      closeButtonText: 'Done',\r\n      duration: 1000\r\n    });\r\n    toast.present();\r\n  }\r\n}\r\n"],"sourceRoot":""}